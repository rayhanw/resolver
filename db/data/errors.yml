- title: undefined method `model_name` for nil:NilClass
  details: Error happens on the line of `simple_form_for [@restaurant, @review]`
  resolver: |
    ######  In restaurants/show.html.erb
    ```erb
    <%= simple_form_for [@restaurant, @review] do |f| %>
      <!-- [...] -->
    <% end %>
    ```
    ######  In restaurants_controller.rb
    ```rb
    # Check if the variables `@restaurant` or `@review` are defined in the associated controller action (e.g. `show` method)
    # in restaurants_controller.rb, make sure you've defined both variables

    def show
      @restaurant = Restaurant.find(params[:restaurant_id])
      @review = Review.new
    end
    ```

- title: undefined method `each' for nil:NilClass
  details: Error happens on the line of `@restaurants.each do |restaurant|`
  resolver: |
    ###### In restaurants/index.html.erb
    ```erb
    <% @restaurants.each do |restaurant| %>
    <%# ^^^^^^^^^^^ %>
    <!-- [...] -->
    ```
    ###### In restaurants_controller.rb
    ```rb
    # Make sure you have defined the variable `@restaurants`
    def index
      @restaurants = Restaurant.all
    end
    ```

- title: undefined method `assert_valid_keys' for true:TrueClass
  details: Using `pg_search`'s `tsearch` feature and the error happens when you try to use the method you created with `pg_search_scope`
  resolver: |
    Make sure the value of `tsearch` entry is a `Hash` that contains a `prefix` with the value of `true`
    ###### In restaurant.rb
    ```rb
    class Restaurant < ApplicationRecord
      # [...]
      include PgSearch::Model

      pg_search_scope :search_by_keyword,
                      against: [:name, :location],
                      using: {
                        tsearch: { prefix: true }
                      }
                      #          ^^^^^^^^^^^^^^^^
      # [...]
    end
    ```

- title: Images aren't uploading when using Cloudinary & ActiveStorage
  details: If you run into a problem of images not being uploaded to the service provider (e.g. Cloudinary), double check the setup. Make sure you finish all the config.
  resolver: |
    ###### In config/storage.yml
    ```rb
    # Make sure you've defined the service you're using (e.g. Cloudinary)
    # ⚠️ Be careful of the indentation, YML files are sensitive to it
    cloudinary:
      service: Cloudinary
      folder: <%= Rails.env %> # OPTIONAL - This is done to separate DEVELOPMENT and PRODUCTION environments pictures
    ```

    ###### In config/environments/development.rb (For your own laptop/localhost environment)


    ###### You'll want to change the following also in config/environments/production.rb (For development environment [Heroku])
    ```rb
    # [...]
    # Find the line that says `config.active_storage.service = :local`.
    # Replace the value with `:cloudinary` (without the backtick)
    # If the line does not exist, then add the next line (within the block or before the `end`)
    config.active_storage.service = :cloudinary
    # [...]
    ```


    ###### In the model [`restaurant.rb`]
    ```rb
    class Restaurant < ApplicationRecord
      # [...]
      has_one_attached :photo
      # [...]
    end
    ```


    ###### In the controller [`/controllers/restaurants_controller.rb`]
    ```rb
    # Ensure that you've added :photo (or photos: [] -> at the end) to the strong params
    class RestaurantsController < ApplicationController
      # [...]
      private

      def restaurant_params
        params.require(:restaurant).permit(:name, :location, :photo)
        # params.require(:restaurant).permit(:name, :location, photos: []) -> If using `has_many_attached :photos`
      end
      # [...]
    end
    ```

- title: Error from first time pushing a new project to Heroku
  details: When you push a new project to Heroku for the first time and you run into an issue that says 'Your bundle only supports platforms ["arm64-darwin-21"] but your local platform is x86_64-linux'.
  resolver: |
    ```sh
    bundle lock --add-platform x86_64-linux
    git add .
    git commit -m "Add x86_64-linux platform for Heroku" # can change to any message you want
    git push heroku # You probably want to push to Github also
    ```
