- title: undefined method `model_name` for nil:NilClass
  details: Error happens on the line of `simple_form_for [@restaurant, @review]`
  votes: 5
  status: 1
  resolver: |
    ######  In restaurants/show.html.erb
    ```erb
    <%= simple_form_for [@restaurant, @review] do |f| %>
      <!-- [...] -->
    <% end %>
    ```
    ######  In restaurants_controller.rb
    ```rb
    # Check if the variables `@restaurant` or `@review` are defined in the associated controller action (e.g. `show` method)
    # in restaurants_controller.rb, make sure you've defined both variables

    def show
      @restaurant = Restaurant.find(params[:restaurant_id])
      @review = Review.new
    end
    ```
  category: Rails

- title: undefined method `each' for nil:NilClass
  details: Error happens on the line of `@restaurants.each do |restaurant|`
  votes: 10
  status: 1
  resolver: |
    ###### In restaurants/index.html.erb
    ```erb
    <% @restaurants.each do |restaurant| %>
    <%# ^^^^^^^^^^^ %>
    <!-- [...] -->
    ```
    ###### In restaurants_controller.rb
    ```rb
    # Make sure you have defined the variable `@restaurants`
    def index
      @restaurants = Restaurant.all
    end
    ```
  category: Rails

- title: undefined method `assert_valid_keys' for true:TrueClass
  details: Using `pg_search`'s `tsearch` feature and the error happens when you try to use the method you created with `pg_search_scope`
  votes: 1
  resolver: |
    Make sure the value of `tsearch` entry is a `Hash` that contains a `prefix` with the value of `true`
    ###### In restaurant.rb
    ```rb
    class Restaurant < ApplicationRecord
      # [...]
      include PgSearch::Model

      pg_search_scope :search_by_keyword,
                      against: [:name, :location],
                      using: {
                        tsearch: { prefix: true }
                      }
                      #          ^^^^^^^^^^^^^^^^
      # [...]
    end
    ```
  category: Rails

- title: Images aren't uploading when using Cloudinary & ActiveStorage
  details: If you run into a problem of images not being uploaded to the service provider (e.g. Cloudinary), double check the setup. Make sure you finish all the config.
  votes: 8
  status: 1
  resolver: |
    ###### In config/storage.yml
    ```rb
    # Make sure you've defined the service you're using (e.g. Cloudinary)
    # ⚠️ Be careful of the indentation, YML files are sensitive to it
    cloudinary:
      service: Cloudinary
      folder: <%= Rails.env %> # OPTIONAL - This is done to separate DEVELOPMENT and PRODUCTION environments pictures
    ```

    ###### In config/environments/development.rb (For your own laptop/localhost environment)


    ###### You'll want to change the following also in config/environments/production.rb (For production environment [Heroku])
    ```rb
    # [...]
    # Find the line that says `config.active_storage.service = :local`.
    # Replace the value with `:cloudinary` (without the backtick)
    # If the line does not exist, then add the next line (within the block or before the `end`)
    config.active_storage.service = :cloudinary
    # [...]
    ```


    ###### In the model [`restaurant.rb`]
    ```rb
    class Restaurant < ApplicationRecord
      # [...]
      has_one_attached :photo
      # [...]
    end
    ```


    ###### In the controller [`/controllers/restaurants_controller.rb`]
    ```rb
    # Ensure that you've added :photo (or photos: [] -> at the end) to the strong params
    class RestaurantsController < ApplicationController
      # [...]
      private

      def restaurant_params
        params.require(:restaurant).permit(:name, :location, :photo)
        # params.require(:restaurant).permit(:name, :location, photos: []) -> If using `has_many_attached :photos`
      end
      # [...]
    end
    ```
  category: Rails

- title: Error from first time pushing a new project to Heroku
  details: When you push a new project to Heroku for the first time and you run into an issue that says 'Your bundle only supports platforms ["arm64-darwin-21"] but your local platform is x86_64-linux'.
  votes: 12
  status: 1
  resolver: |
    ```sh
    bundle lock --add-platform x86_64-linux
    git add .
    git commit -m "Add x86_64-linux platform for Heroku" # can change to any message you want
    git push heroku # You probably want to push to Github also
    ```
  category: Rails,Heroku

- title: |
    "We're sorry, but something went wrong error" on Heroku
  details: When you push to Heroku, you'll often see this error being displayed. One of the more common problem of this is because you might've forgotten to migrate your DB on Heroku. If this isn't the case, you'll have to do some bug hunting.
  votes: 2
  status: 1
  resolver: |
    ```sh
    heroku run rails db:migrate
    # If DB migration is not the case, run `heroku logs --tail` and find the keyword `FATAL` to see what the problem is
    ```
  category: Rails,Heroku

- title: JavaScript stopped working and crashes your app
  details: You ran `webpack-dev-server` once to live-reload your JS changes. But the next time you try to run your Rails app, you're met with an error that comes from the `javascript_pack_tag` line in `application.html.erb`. This is due to Rails no longer compiling your JS because it's expecting a `webpack-dev-server` to be ran on the side that will compile the JS changes. But since it's not run/active, JS does not get compiled, hence it errors when you try to even open http://localhost:3000
  votes: 99
  status: 1
  resolver: |
    ```sh
    # In terminal
    rails webpacker:install
    ```
    Rails will now start compiling your JS again alongside the server itself.
  category: Rails,Javascript

- title: VSCode not opening
  details: You're running `code .` in your Terminal and it gets stuck on downloading. This is quite specific to devs in Indonesia (might be applicable to anyone also). My running theory on why this is happening is the CDN is blocked by your ISP/government, so the download can't be processed.
  votes: 90
  status: 1
  resolver: |
    You're trying to open VSCode with `code .` (or opening manually) and it gets stuck on "Downloading:"
    ```sh
    Updating VS Code Server to version da15b6fd3ef856477bf6f4fb29ba1b7af717770d
    Removing previous installation...
    Installing VS Code Server for x64 (da15b6fd3ef856477bf6f4fb29ba1b7af717770d)
    Downloading:
    ```
    ##### Get a VPN
  category: VSCode

- title: ActiveStorage removing existing attachments
  details: Previously attached files on an instance/entry gets removed when you attach/upload new a new file. This is a default behavior of ActiveStorage where when you upload a new file, the existing ones gets replaced. There's a setting that you can add to disable this behaviour
  votes: 70
  status: 1
  resolver: |
    ```ruby
    # config/application.rb
    # add this line anywhere between the `do` ... `end`
    config.active_storage.replace_on_assign_to_many = true
    ```
  category: Rails,ActiveStorage
